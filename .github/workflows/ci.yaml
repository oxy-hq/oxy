name: CI check

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - main
      - trigger-ci-workflow
    paths-ignore:
      - "docs/**"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  changesets:
    if: ${{ github.event_name != 'pull_request' || (!startsWith(github.head_ref, 'release-please--') && !github.event.pull_request.draft) }}
    uses: ./.github/workflows/changesets.yaml
    name: Changesets

  typos:
    name: Typos
    if: github.event.pull_request.draft != true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check typos
        uses: crate-ci/typos@master

  fmt:
    name: Format codes
    needs: [changesets, typos]
    if: needs.changesets.outputs.onyx == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prep Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Prep cargo cache
        uses: Swatinem/rust-cache@v2
        # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Node.js
        uses: actions/setup-node@v4
        id: setup-node
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: pnpm-store-ubuntu-latest-x86_64-unknown-linux-gnu-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-ubuntu-latest-x86_64-unknown-linux-gnu
      - name: Run pnpm install
        run: pnpm install
      - name: Run lint-staged
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pnpm lint-staged --diff="origin/${{ github.base_ref }}...origin/${{ github.head_ref }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            pnpm lint-staged --diff="${{ github.event.before }}...${{ github.event.after }}"
          fi

  lint:
    needs: [fmt]
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prep Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Prep cargo cache
        uses: Swatinem/rust-cache@v2
      # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Tauri deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Run cargo check
        run: cargo check --verbose --workspace
      - name: Run cargo clippy
        run: cargo clippy --verbose --workspace --fix
      - name: Cleanup tauri build to reduce cache size
        run: rm -rf target/debug/**/libonyx_desktop.*

  test:
    needs: [fmt]
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prep Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Prep cargo cache
        uses: Swatinem/rust-cache@v2
      # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run cargo test
        env:
          RUST_BACKTRACE: 1
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BIGQUERY_SAMPLE_KEY: ${{ secrets.BIGQUERY_SAMPLE_KEY }}
        run: |
          touch examples/bigquery-sample.key
          echo $BIGQUERY_SAMPLE_KEY > examples/bigquery-sample.key
          cargo test --verbose --no-fail-fast -- --nocapture
      - name: Check json schemas
        run: cargo run -- gen-config-schema --check
