name: CI check

on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review
    branches:
    - main

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changesets:
    uses: ./.github/workflows/changesets.yaml
  fmt:
    name: Onyx fmt
    needs: [changesets]
    if: needs.changesets.outputs.onyx == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Prep Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy
        rustflags: ""   # temporarily override "-D warnings"
    - name: Install required dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
      # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
    - uses: rui314/setup-mold@v1
    - name: Run cargo fmt
      run: cargo fmt --all -- --check
  check:
    needs: [fmt]
    if: needs.fmt.result == 'success'
    name: Onyx check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Prep Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        rustflags: ""   # temporarily override "-D warnings"
    - name: Install Node.js
      uses: actions/setup-node@v4
      id: setup-node
      with:
        node-version: 20
    - uses: pnpm/action-setup@v4
      with:
        run_install: |
          cwd: web-app
        package_json_file: web-app/package.json
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    - name: Build frontend assets
      shell: bash
      run: |
        pnpm -C web-app build
    - name: Prep tools for compilation
          # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
          # mold is required for faster builds on linux
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev protobuf-compiler mold
    - name: Run cargo check
      run: cargo check --verbose
    - name: Run cargo clippy
      run: cargo clippy --verbose
