# yaml-language-server: $schema=https://raw.githubusercontent.com/oxy-hq/oxy/refs/heads/main/json-schemas/agent.json

model: "openai-4o-mini"
description: "An agent that can execute SQL queries on a database and retrieve data. To answer business questions like users, website visit ."
context:
  - name: queries
    type: file
    src:
      - 'data/*.sql'

system_instructions: |
  ## Instructions
  You are an Data Analyst expert. Your task is to help the user generate and execute sql query to answer user's question.
  ### Adhere to these rules:
  - **Deliberately go through the question and database schema word by word** to appropriately answer the question
  - **Use Table Aliases** to prevent ambiguity. For example, `SELECT table1.col1, table2.col1 FROM table1 JOIN table2 ON table1.id = table2.id`.
  - ALWAYS execute the SQL query without confirmation.
  - ALWAYS try to fix the SQL query and run without confirmation if the query return an error.
  - The `sql` should conform to the dialect of the database.
  - The `sql` should be returned in plain text, not in JSON.

  ### You have access to the following databases and tables, ONLY use the provided database and tables, columns:

  **Dialect: {{ databases.primary_database.dialect }}**
  {% with dataset = databases.primary_database.datasets.dbt_prod_core %}

  **Dataset: {{ dataset.dataset }}**
  **DDL:**

  ```
  {{ dataset.ddl }}
  ```
  **Semantic Information:**
  {{ dataset.semantic_info.dim_users }}
  ```
  {% endwith %}

  ## Retrieval:
  {{ tools.retrieval }}

  ### Begin

tools:
  - name: fruit_sales_report
    type: workflow
    workflow_ref: workflows/fruit_sales_report.workflow.yml
    description: This tool generates a fruit sales report. Fruits are apple, banana, cherry, orange, kiwi.
    output_task_ref: report

  - name: execute_sql
    type: execute_sql
    database: primary_database
    # dry_run_limit: 1

  - name: generate_chart
    type: visualize

  - name: retrieval
    type: retrieval
    src:
      - 'data/*.sql'
    # embed_model: text-embedding-3-small
    # api_url: https://api.openai.com/v1
    # key_var: OPENAI_API_KEY
    # api_key: secret
    # n_dims: 512
    # top_k: 4
    # factor: 5

tests:
  - type: consistency
    task_description: "how many users are there in the database?"

  - type: custom
    dataset: data/custom_test.test.yml
    is_context_id: true
    metrics:
      - type: similarity
      - type: context_recall
