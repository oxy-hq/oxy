[tool.poetry]
name = "onyx"
version = "0.0.1"
description = ""
authors = []
readme = "README.md"
package-mode = false
# requires-poetry = ">=2.0" # to be added when poetry 2 is released

[tool.poetry.group.main.dependencies]
python = ">=3.11,<3.12"

[tool.poetry.group.onyx-py.dependencies]
onyx-py = { path = "onyx-py", develop = true }

# required for dependabot
[tool.poetry.dependencies]
python = ">=3.11,<3.12"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.7"
maturin = "^1.7.8"

[tool.ruff]
extend-exclude = ["*_pb2*.py*"]
force-exclude = true
line-length = 120
indent-width = 4

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
# On top of the default `select` (`E4`, E7`, `E9`, and `F`), enable flake8-bugbear (`B`) and flake8-quotes (`Q`).
extend-select = [
  "Q",
  "I",
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "W191", # indentation contains tabs
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.coverage.report]
ignore_errors = true
exclude_also = [
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
