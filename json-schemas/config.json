{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "type": "object",
  "required": [
    "databases",
    "models"
  ],
  "properties": {
    "builder_agent": {
      "type": [
        "string",
        "null"
      ]
    },
    "databases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Database"
      }
    },
    "defaults": {
      "anyOf": [
        {
          "$ref": "#/definitions/Defaults"
        },
        {
          "type": "null"
        }
      ]
    },
    "integrations": {
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Integration"
      }
    },
    "models": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model"
      }
    }
  },
  "definitions": {
    "Database": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "dataset": {
              "type": [
                "string",
                "null"
              ]
            },
            "datasets": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "dry_run_limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "key_path": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "key_path_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "bigquery"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dataset",
            "type"
          ],
          "properties": {
            "dataset": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "duckdb"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "account",
            "database",
            "type",
            "username",
            "warehouse"
          ],
          "properties": {
            "account": {
              "type": "string"
            },
            "database": {
              "type": "string"
            },
            "datasets": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "password": {
              "type": [
                "string",
                "null"
              ]
            },
            "password_var": {
              "type": [
                "string",
                "null"
              ]
            },
            "private_key_path": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "role": {
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "snowflake"
              ]
            },
            "username": {
              "type": "string"
            },
            "warehouse": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "database": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "database_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "password_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "postgres"
              ]
            },
            "user": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "user_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "database": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "database_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "password_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "redshift"
              ]
            },
            "user": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "user_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "database": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "database_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "password_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "port_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "mysql"
              ]
            },
            "user": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "user_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "database": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "database_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "filters": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SchemaObject"
              }
            },
            "host": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "host_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "password_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "role": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "schemas": {
              "default": {},
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "settings_prefix": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "clickhouse"
              ]
            },
            "user": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            },
            "user_var": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dataset_id",
            "developer_token_var",
            "instance",
            "type"
          ],
          "properties": {
            "dataset_id": {
              "type": "string"
            },
            "developer_token_var": {
              "type": "string"
            },
            "instance": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "domo"
              ]
            }
          }
        }
      ],
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Defaults": {
      "type": "object",
      "properties": {
        "database": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "HeaderValue": {
      "anyOf": [
        {
          "description": "Direct header value",
          "type": "string"
        },
        {
          "description": "Header value from environment variable",
          "type": "object",
          "required": [
            "env_var"
          ],
          "properties": {
            "env_var": {
              "description": "Environment variable name containing the header value",
              "type": "string"
            }
          }
        }
      ]
    },
    "InstanceType": {
      "description": "The possible types of values in JSON Schema documents.\n\nSee [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).",
      "type": "string",
      "enum": [
        "null",
        "boolean",
        "object",
        "array",
        "number",
        "string",
        "integer"
      ]
    },
    "Integration": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "api_key_var",
            "base_url",
            "topics",
            "type"
          ],
          "properties": {
            "api_key_var": {
              "type": "string"
            },
            "base_url": {
              "type": "string"
            },
            "topics": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OmniTopic"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "omni"
              ]
            }
          }
        }
      ],
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Model": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "key_var",
            "model_ref",
            "name",
            "vendor"
          ],
          "properties": {
            "api_url": {
              "default": "https://api.openai.com/v1",
              "type": [
                "string",
                "null"
              ]
            },
            "azure_api_version": {
              "type": "string"
            },
            "azure_deployment_id": {
              "type": "string"
            },
            "headers": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "$ref": "#/definitions/HeaderValue"
              }
            },
            "key_var": {
              "type": "string"
            },
            "model_ref": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "vendor": {
              "type": "string",
              "enum": [
                "openai"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "key_var",
            "model_ref",
            "name",
            "vendor"
          ],
          "properties": {
            "key_var": {
              "type": "string"
            },
            "model_ref": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "vendor": {
              "type": "string",
              "enum": [
                "google"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "api_key",
            "api_url",
            "model_ref",
            "name",
            "vendor"
          ],
          "properties": {
            "api_key": {
              "type": "string"
            },
            "api_url": {
              "type": "string"
            },
            "model_ref": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "vendor": {
              "type": "string",
              "enum": [
                "ollama"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "key_var",
            "model_ref",
            "name",
            "vendor"
          ],
          "properties": {
            "api_url": {
              "default": "https://api.anthropic.com/v1",
              "type": [
                "string",
                "null"
              ]
            },
            "key_var": {
              "type": "string"
            },
            "model_ref": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "vendor": {
              "type": "string",
              "enum": [
                "anthropic"
              ]
            }
          }
        }
      ]
    },
    "OmniTopic": {
      "type": "object",
      "required": [
        "model_id",
        "name"
      ],
      "properties": {
        "model_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Schema": {
      "description": "A JSON Schema.",
      "anyOf": [
        {
          "description": "A trivial boolean JSON Schema.\n\nThe schema `true` matches everything (always passes validation), whereas the schema `false` matches nothing (always fails validation).",
          "type": "boolean"
        },
        {
          "description": "A JSON Schema object.",
          "allOf": [
            {
              "$ref": "#/definitions/SchemaObject"
            }
          ]
        }
      ]
    },
    "SchemaObject": {
      "description": "A JSON Schema object.",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The `$id` keyword.\n\nSee [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).",
          "type": [
            "string",
            "null"
          ]
        },
        "$ref": {
          "description": "The `$ref` keyword.\n\nSee [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).",
          "type": [
            "string",
            "null"
          ]
        },
        "additionalItems": {
          "description": "The `additionalItems` keyword.\n\nSee [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "additionalProperties": {
          "description": "The `additionalProperties` keyword.\n\nSee [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "allOf": {
          "description": "The `allOf` keyword.\n\nSee [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Schema"
          }
        },
        "anyOf": {
          "description": "The `anyOf` keyword.\n\nSee [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Schema"
          }
        },
        "const": {
          "description": "The `const` keyword.\n\nSee [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)"
        },
        "contains": {
          "description": "The `contains` keyword.\n\nSee [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "default": {
          "description": "The `default` keyword.\n\nSee [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2)."
        },
        "deprecated": {
          "description": "The `deprecated` keyword.\n\nSee [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).",
          "type": "boolean"
        },
        "description": {
          "description": "The `description` keyword.\n\nSee [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).",
          "type": [
            "string",
            "null"
          ]
        },
        "else": {
          "description": "The `else` keyword.\n\nSee [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "enum": {
          "description": "The `enum` keyword.\n\nSee [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)",
          "type": [
            "array",
            "null"
          ],
          "items": true
        },
        "examples": {
          "description": "The `examples` keyword.\n\nSee [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).",
          "type": "array",
          "items": true
        },
        "exclusiveMaximum": {
          "description": "The `exclusiveMaximum` keyword.\n\nSee [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).",
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "exclusiveMinimum": {
          "description": "The `exclusiveMinimum` keyword.\n\nSee [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).",
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "format": {
          "description": "The `format` keyword.\n\nSee [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).",
          "type": [
            "string",
            "null"
          ]
        },
        "if": {
          "description": "The `if` keyword.\n\nSee [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "items": {
          "description": "The `items` keyword.\n\nSee [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).",
          "anyOf": [
            {
              "$ref": "#/definitions/SingleOrVec_for_Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "maxItems": {
          "description": "The `maxItems` keyword.\n\nSee [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "maxLength": {
          "description": "The `maxLength` keyword.\n\nSee [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "maxProperties": {
          "description": "The `maxProperties` keyword.\n\nSee [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "maximum": {
          "description": "The `maximum` keyword.\n\nSee [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).",
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "minItems": {
          "description": "The `minItems` keyword.\n\nSee [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "minLength": {
          "description": "The `minLength` keyword.\n\nSee [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "minProperties": {
          "description": "The `minProperties` keyword.\n\nSee [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "minimum": {
          "description": "The `minimum` keyword.\n\nSee [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).",
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "multipleOf": {
          "description": "The `multipleOf` keyword.\n\nSee [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).",
          "type": [
            "number",
            "null"
          ],
          "format": "double"
        },
        "not": {
          "description": "The `not` keyword.\n\nSee [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "oneOf": {
          "description": "The `oneOf` keyword.\n\nSee [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Schema"
          }
        },
        "pattern": {
          "description": "The `pattern` keyword.\n\nSee [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).",
          "type": [
            "string",
            "null"
          ]
        },
        "patternProperties": {
          "description": "The `patternProperties` keyword.\n\nSee [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Schema"
          }
        },
        "properties": {
          "description": "The `properties` keyword.\n\nSee [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Schema"
          }
        },
        "propertyNames": {
          "description": "The `propertyNames` keyword.\n\nSee [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "readOnly": {
          "description": "The `readOnly` keyword.\n\nSee [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).",
          "type": "boolean"
        },
        "required": {
          "description": "The `required` keyword.\n\nSee [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "then": {
          "description": "The `then` keyword.\n\nSee [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "title": {
          "description": "The `title` keyword.\n\nSee [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {
          "description": "The `type` keyword.\n\nSee [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1) and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).",
          "anyOf": [
            {
              "$ref": "#/definitions/SingleOrVec_for_InstanceType"
            },
            {
              "type": "null"
            }
          ]
        },
        "uniqueItems": {
          "description": "The `uniqueItems` keyword.\n\nSee [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).",
          "type": [
            "boolean",
            "null"
          ]
        },
        "writeOnly": {
          "description": "The `writeOnly` keyword.\n\nSee [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).",
          "type": "boolean"
        }
      },
      "additionalProperties": true
    },
    "SingleOrVec_for_InstanceType": {
      "description": "A type which can be serialized as a single item, or multiple items.\n\nIn some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.",
      "anyOf": [
        {
          "$ref": "#/definitions/InstanceType"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceType"
          }
        }
      ]
    },
    "SingleOrVec_for_Schema": {
      "description": "A type which can be serialized as a single item, or multiple items.\n\nIn some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.",
      "anyOf": [
        {
          "$ref": "#/definitions/Schema"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schema"
          }
        }
      ]
    }
  }
}